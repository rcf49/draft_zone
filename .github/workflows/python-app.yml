# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see:
## https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python
## https://docs.github.com/en/actions/using-jobs/assigning-permissions-to-jobs

# Name this Workflow
name: Run Designated Python Scripts

# Run this Workflow when the main branch is updated
on:
  push:
    branches: [ "main" ]

# Give permissions to write (necessary to push updates to repo)
permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Checkout the repo
    - name: Checkout draft_zone repository
      uses: actions/checkout@v3

    # Setup Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
        cache: 'pip'

    # Install requirements.txt
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    # Lint check Python files
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    # Test Python files in entire repository
    #- name: Test with pytest
    #  run: |
    # Will need to specify folder with test files: https://docs.pytest.org/
    #    pytest .
    
    # Execute the following scripts in order
    - name: Execute Python script
      run: |
          python scripts/test.py

    # Check if any files have been modified with this workflow
    - name: Check for modified files
      id: git-check
      run: echo "modified=`if [ -n "$(git status --porcelain)" ]; then echo "true"; else echo "false"; fi`" >> $GITHUB_OUTPUT

    # If files were modified in this workflow, push updates back to the repo
    - name: Push and commit changes to draft_zone reposiotry, if there are modified files
      if: steps.git-check.outputs.modified == 'true'
      run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "Modified files by GitHub Actions `date +\"%Y_%m_%d\"`"
          git tag auto_commit
          git push --tags
